<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lipop.micro.house.biz.dao.BlogMapper" >
  <resultMap id="BaseResultMap" type="com.lipop.micro.house.common.model.Blog" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="tags" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="cat" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lipop.micro.house.common.model.Blog" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="tags" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="cat" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="content" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, tags, create_time, title, cat, content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from blog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lipop.micro.house.common.model.Blog" >
    insert into blog (id, tags, create_time, 
      title, cat, content
      )
    values (#{id,jdbcType=INTEGER}, #{tags,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, 
      #{title,jdbcType=VARCHAR}, #{cat,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lipop.micro.house.common.model.Blog" >
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="tags != null" >
        tags,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="cat != null" >
        cat,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tags != null" >
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="cat != null" >
        #{cat,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lipop.micro.house.common.model.Blog" >
    update blog
    <set >
      <if test="tags != null" >
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="cat != null" >
        cat = #{cat,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lipop.micro.house.common.model.Blog" >
    update blog
    set tags = #{tags,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      title = #{title,jdbcType=VARCHAR},
      cat = #{cat,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lipop.micro.house.common.model.Blog" >
    update blog
    set tags = #{tags,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      title = #{title,jdbcType=VARCHAR},
      cat = #{cat,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectBlogListForPage" resultType="com.lipop.micro.house.common.model.Blog">
    select <include refid="Base_Column_List"/>
    from   blog a
    <where>
      <if test="blog.id != null   and blog.id != 0">
        and id   = #{blog.id}
      </if>
    </where>
    order by a.create_time desc
    <if test='pageParams.offset != null and pageParams.limit != null'>
      limit #{pageParams.offset}, #{pageParams.limit}
    </if>
    <if test='pageParams.offset == null and pageParams.limit != null'>
      limit #{pageParams.limit}
    </if>
  </select>
  <select id="selectBlogCount" resultType="long">
    select count(id)
    from   blog a
    <where>
      <if test="id != null   and id != 0">
        and id   = #{id}
      </if>
    </where>
    order by a.create_time desc
  </select>
</mapper>